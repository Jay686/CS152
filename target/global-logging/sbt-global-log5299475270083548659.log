[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Chuying\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Chuying\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 9.0.4)
[debug]       Load.loadUnit: plugins took 203.5957ms
[debug]       Load.loadUnit: defsScala took 0.5594ms
[debug] [Loading] Scanning directory C:\Users\Chuying\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Chuying\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 72.1334 ms
[debug]           Load.resolveProject(global-plugins) took 159.2339ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Chuying\.sbt\1.0\plugins, plugins: List(<none>))) took 301.7698ms
[debug] [Loading] Done in C:\Users\Chuying\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 392.2721ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6182ms
[debug]     Load.loadUnit(file:/C:/Users/Chuying/.sbt/1.0/plugins/, ...) took 639.0619ms
[debug]   Load.apply: load took 1212.4609ms
[debug]   Load.apply: resolveProjects took 11.1738ms
[debug]   Load.apply: finalTransforms took 311.7129ms
[debug]   Load.apply: config.delegates took 16.8937ms
[debug]   Load.apply: Def.make(settings)... took 6291.891ms
[debug]   Load.apply: structureIndex took 332.6606ms
[debug]   Load.apply: mkStreams took 2.5249ms
[info] loading global plugins from C:\Users\Chuying\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 14758.1107ms
[debug]           Load.loadUnit: plugins took 77.0402ms
[debug]           Load.loadUnit: defsScala took 0.0062ms
[debug] [Loading] Scanning directory C:\Users\Chuying\IdeaProjects\CS152\project
[debug]             Load.loadUnit: mkEval took 13.3479ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Chuying\IdeaProjects\CS152\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.318 ms
[info] loading settings for project cs152-build from idea.sbt ...
[debug]               Load.resolveProject(cs152-build) took 87.4475ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cs152-build, base: C:\Users\Chuying\IdeaProjects\CS152\project, plugins: List(<none>))) took 100.4869ms
[debug] [Loading] Done in C:\Users\Chuying\IdeaProjects\CS152\project, returning: (cs152-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 606.4397ms
[debug]           Load.loadUnit: cleanEvalClasses took 61.601ms
[debug]         Load.loadUnit(file:/C:/Users/Chuying/IdeaProjects/CS152/project/, ...) took 747.915ms
[debug]       Load.apply: load took 750.2657ms
[debug]       Load.apply: resolveProjects took 0.1818ms
[debug]       Load.apply: finalTransforms took 23.8138ms
[debug]       Load.apply: config.delegates took 0.6623ms
[debug]       Load.apply: Def.make(settings)... took 1146.4226ms
[debug]       Load.apply: structureIndex took 351.8653ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\Chuying\IdeaProjects\CS152\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5256.5418ms
[debug]     Load.loadUnit: defsScala took 0.007ms
[debug] [Loading] Scanning directory C:\Users\Chuying\IdeaProjects\CS152
[debug]       Load.loadUnit: mkEval took 1.1134ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Chuying\IdeaProjects\CS152, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 8.6324 ms
[info] loading settings for project cs152 from build.sbt ...
[debug]         Load.resolveProject(cs152) took 102.965ms
[debug]       Load.loadTransitive: finalizeProject(Project(id cs152, base: C:\Users\Chuying\IdeaProjects\CS152, plugins: List(<none>))) took 117.2847ms
[debug] [Loading] Done in C:\Users\Chuying\IdeaProjects\CS152, returning: (cs152)
[debug]     Load.loadUnit: loadedProjectsRaw took 447.773ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.5514ms
[debug]   Load.loadUnit(file:/C:/Users/Chuying/IdeaProjects/CS152/, ...) took 5725.5449ms
[debug] Load.apply: load took 5741.4794ms
[debug] Load.apply: resolveProjects took 3.0709ms
[debug] Load.apply: finalTransforms took 313.248ms
[debug] Load.apply: config.delegates took 0.547ms
[debug] Load.apply: Def.make(settings)... took 136.973ms
[debug] Load.apply: structureIndex took 32.8682ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to CS152 (in build file:/C:/Users/Chuying/IdeaProjects/CS152/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54804 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54804, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CS152 (in build file:/C:/Users/Chuying/IdeaProjects/CS152/)
[debug] > Exec(idea-shell, None, None)
