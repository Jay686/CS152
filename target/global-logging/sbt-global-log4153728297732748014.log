[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Chuying\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Chuying\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 9.0.4)
[debug]       Load.loadUnit: plugins took 397.2303ms
[debug]       Load.loadUnit: defsScala took 0.8719ms
[debug] [Loading] Scanning directory C:\Users\Chuying\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Chuying\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 60.9444 ms
[debug]           Load.resolveProject(global-plugins) took 209.4495ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Chuying\.sbt\1.0\plugins, plugins: List(<none>))) took 455.9162ms
[debug] [Loading] Done in C:\Users\Chuying\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 609.5113ms
[debug]       Load.loadUnit: cleanEvalClasses took 4.0321ms
[debug]     Load.loadUnit(file:/C:/Users/Chuying/.sbt/1.0/plugins/, ...) took 1171.1111ms
[debug]   Load.apply: load took 2245.324ms
[debug]   Load.apply: resolveProjects took 13.9147ms
[debug]   Load.apply: finalTransforms took 695.811ms
[debug]   Load.apply: config.delegates took 33.2549ms
[debug]   Load.apply: Def.make(settings)... took 4650.2437ms
[debug]   Load.apply: structureIndex took 308.4113ms
[debug]   Load.apply: mkStreams took 3.4273ms
[info] loading global plugins from C:\Users\Chuying\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 14030.4547ms
[debug]           Load.loadUnit: plugins took 107.335ms
[debug]           Load.loadUnit: defsScala took 0.0068ms
[debug] [Loading] Scanning directory C:\Users\Chuying\IdeaProjects\CS152\project
[debug]             Load.loadUnit: mkEval took 106.7114ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Chuying\IdeaProjects\CS152\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.222 ms
[info] loading settings for project cs152-build from idea2.sbt ...
[debug]               Load.resolveProject(cs152-build) took 74.2507ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cs152-build, base: C:\Users\Chuying\IdeaProjects\CS152\project, plugins: List(<none>))) took 91.5052ms
[debug] [Loading] Done in C:\Users\Chuying\IdeaProjects\CS152\project, returning: (cs152-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 854.9649ms
[debug]           Load.loadUnit: cleanEvalClasses took 15.8432ms
[debug]         Load.loadUnit(file:/C:/Users/Chuying/IdeaProjects/CS152/project/, ...) took 983.0952ms
[debug]       Load.apply: load took 987.5146ms
[debug]       Load.apply: resolveProjects took 4.284ms
[debug]       Load.apply: finalTransforms took 145.6515ms
[debug]       Load.apply: config.delegates took 5.6452ms
[debug]       Load.apply: Def.make(settings)... took 800.6265ms
[debug]       Load.apply: structureIndex took 175.8519ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from C:\Users\Chuying\IdeaProjects\CS152\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7916.9108ms
[debug]     Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory C:\Users\Chuying\IdeaProjects\CS152
[debug]       Load.loadUnit: mkEval took 0.3913ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Chuying\IdeaProjects\CS152, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.84 ms
[info] loading settings for project cs152 from build.sbt ...
[debug]         Load.resolveProject(cs152) took 196.8999ms
[debug]       Load.loadTransitive: finalizeProject(Project(id cs152, base: C:\Users\Chuying\IdeaProjects\CS152, plugins: List(<none>))) took 225.1165ms
[debug] [Loading] Done in C:\Users\Chuying\IdeaProjects\CS152, returning: (cs152)
[debug]     Load.loadUnit: loadedProjectsRaw took 12681.4538ms
[debug]     Load.loadUnit: cleanEvalClasses took 305.9179ms
[debug]   Load.loadUnit(file:/C:/Users/Chuying/IdeaProjects/CS152/, ...) took 20906.9744ms
[debug] Load.apply: load took 20943.3806ms
[debug] Load.apply: resolveProjects took 0.1484ms
[debug] Load.apply: finalTransforms took 136.6664ms
[debug] Load.apply: config.delegates took 0.4254ms
[debug] Load.apply: Def.make(settings)... took 642.4424ms
[debug] Load.apply: structureIndex took 68.583ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to CS152 (in build file:/C:/Users/Chuying/IdeaProjects/CS152/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52161 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52161, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CS152 (in build file:/C:/Users/Chuying/IdeaProjects/CS152/)
[debug] > Exec(idea-shell, None, None)
