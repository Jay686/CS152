

object arithmetic {
  
  def sqrt(n: Int): Option[Int] = {
     // = None if n < 0
     // = largest int m such that m * m <= n
  }
  
  def log(n: Int): Option[Int] = {
     // = None if N <= 0
     // = largest m such that 2^m <= n
  }
  
  def isPrime(n: Int): Option[Boolean] = {
    // = true if n has no divisors > 1
  }
  
  def gcd(n: Int, m: Int): Option[Int] = {
    // = None if n or m < 0
    // = gcd(m, n) if n < m
    // = largest k dividing both n and m
  }
  
  def lcm(n: Int, m: Int): Option[Int] = {
    // = None if n < 0 or m < 0
    // = smallest k such that n a,d m divide k
  }
  
  def phi(n: Int): Option[Int] = {
    // = None if n < 0
    // = # of k <= n such that gcd(k, n) = 1
  }
  
}